[
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column maker using expression value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "maker",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column maker using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "maker",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column model using expression value.replace(/\\s+/,' ')",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "model",
    "expression": "value.replace(/\\s+/,' ')",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column transmission using expression value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "transmission",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column mileage using expression value.toNumber()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "mileage",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column engine_displacement using expression value.toNumber()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "engine_displacement",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column engine_power using expression value.toNumber()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "engine_power",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column manufacture_year using expression value.toDate()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "manufacture_year",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column body_type using expression value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "body_type",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-removal",
    "description": "Remove column color_slug",
    "columnName": "color_slug"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column transmission using expression value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "transmission",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column door_count using expression value.toNumber()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "door_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column seat_count using expression value.toNumber()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "seat_count",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column fuel_type using expression value.trim()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "fuel_type",
    "expression": "value.trim()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column date_created using expression value.toDate()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "date_created",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column date_last_seen using expression value.toDate()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "date_last_seen",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column price_eur using expression value.toNumber()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "price_eur",
    "expression": "value.toNumber()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column maker using expression value.toUppercase()",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "model",
          "expression": "value",
          "columnName": "model",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "octavia",
                "l": "octavia"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "maker",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column maker using expression value.toUppercase()",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "maker",
    "expression": "value.toUppercase()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Run_crazy at index 3 based on column mileage using expression grel:value>200000",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "newColumnName": "Run_crazy",
    "columnInsertIndex": 3,
    "baseColumnName": "mileage",
    "expression": "grel:value>200000",
    "onError": "set-to-blank"
  },
  {
    "op": "core/text-transform",
    "description": "Text transform on cells in column manufacture_year using expression value.toDate()",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "maker",
          "expression": "value",
          "columnName": "maker",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "SKODA",
                "l": "SKODA"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "model",
          "expression": "value",
          "columnName": "model",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "octavia",
                "l": "octavia"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "columnName": "manufacture_year",
    "expression": "value.toDate()",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10
  },
  {
    "op": "core/column-addition",
    "description": "Create column Crazy_New at index 3 based on column mileage using expression grel:value<100",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "maker",
          "expression": "value",
          "columnName": "maker",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "CITROEN",
                "l": "CITROEN"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        },
        {
          "type": "list",
          "name": "model",
          "expression": "value",
          "columnName": "model",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "c3",
                "l": "c3"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    },
    "newColumnName": "Crazy_New",
    "columnInsertIndex": 3,
    "baseColumnName": "mileage",
    "expression": "grel:value<100",
    "onError": "set-to-blank"
  },
  {
    "op": "core/column-rename",
    "description": "Rename column Run_crazy to Crazy_Run",
    "oldColumnName": "Run_crazy",
    "newColumnName": "Crazy_Run"
  },
  {
    "op": "core/column-removal",
    "description": "Remove column Crazy_New",
    "columnName": "Crazy_New"
  },
  {
    "op": "core/column-addition",
    "description": "Create column Crazy_New at index 3 based on column mileage using expression grel:value<100",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "newColumnName": "Crazy_New",
    "columnInsertIndex": 3,
    "baseColumnName": "mileage",
    "expression": "grel:value<100",
    "onError": "set-to-blank"
  },
  {
    "op": "core/mass-edit",
    "description": "Mass edit cells in column transmission",
    "engineConfig": {
      "facets": [],
      "mode": "record-based"
    },
    "columnName": "transmission",
    "expression": "value",
    "edits": [
      {
        "fromBlank": true,
        "fromError": false,
        "from": [
          ""
        ],
        "to": "man"
      }
    ]
  },
  {
    "op": "core/row-removal",
    "description": "Remove rows",
    "engineConfig": {
      "facets": [
        {
          "type": "list",
          "name": "maker",
          "expression": "isBlank(value).toString()",
          "columnName": "maker",
          "invert": false,
          "selection": [
            {
              "v": {
                "v": "true",
                "l": "true"
              }
            }
          ],
          "selectNumber": false,
          "selectDateTime": false,
          "selectBoolean": false,
          "omitBlank": false,
          "selectBlank": false,
          "omitError": false,
          "selectError": false
        }
      ],
      "mode": "record-based"
    }
  }
]
